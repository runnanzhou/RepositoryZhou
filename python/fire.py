# Name: Runnan Zhou 18Spring CSC110# Section: 1N# due day: 04/14/18# purpose: To build a program simulating the real life scenrio about how fire spreading.# It is using drawing panel and loop to complete the function.from DrawingPanel import *import randomPRO_PERCENT = 75def main():    '''    the main function is a concise summary of all the function. It included open the file and define variables.    :return:    '''    file_name = input("File name? ")    file = open(file_name)    lines = file.readlines()    new_list = []    percent = 0    original_list = make_list(lines)    p = DrawingPanel(10 * len(original_list), 10 * len(original_list[0]))    Draw_function(original_list, p)    fire_draw(original_list, new_list, p)def fire_draw(original_list, new_list, p):    '''    This function is to redraw the new_list after the list changed. When there is no "2" in the list    the function will stop.    :param original_list: the original list which is given by the user.    :param new_list: the new list which store all the changes on the old list.    :param p: drawing panel.    :return:    '''    find=False    find = find_function(find, original_list)    while find==True:        p.sleep(200)        original_list = change(original_list, new_list)        Draw_function(original_list, p)        find = False        find=find_function(find, original_list)def find_function(find, original_list):    for i in range(len(original_list)):        if original_list[i].count("2") > 0:            find = True    return finddef change(original_list, new_list):    '''    This function is to change the old list and store all the changes in the new list, but after that    it will be return to the old list which means replace the content of old list.    :param original_list: the original list but given new content each time.    :param new_list: the new list which store all the changes happen on the old list.    :return: new_list which to make the changes happened on the old list being given to itself    to replace the old content.    '''    new_list = []    for i in range(0, len(original_list)):        new_list.append([])        for n in range(0, len(original_list[i])):            if original_list[i][n] == "0":                new_list[i].append("0")            elif original_list[i][n] == "2":                new_list[i].append("0")            elif original_list[i][n] == "1":                if original_list[i][n + 1] == "2" or original_list[i + 1][n] == "2" or\                        original_list[i - 1][n] == "2" or original_list[i][n - 1] == "2":                    percent = random.randint(1, 100)                    if percent < PRO_PERCENT:                        new_list[i].append("2")                    else:                        new_list[i].append("1")                else:                    new_list[i].append("1")    return new_listdef make_list(lines):    '''    this function is to make the original list which given by the user.    :param lines: lines is the original content of document which be read in lines.    :return: original_list.    '''    original_list = []    for line in lines:        line = line.split()        original_list.append(line)    return original_listdef Draw_function(original_list, p):    '''    this function is to draw the list, and show the changes on the drawing panel.    :param original_list:the original list but given new content each time.    :param p:drawing panel.    :return:    '''    for i in range(0, len(original_list)):        for n in range(0, len(original_list[i])):            if original_list[i][n] == "0":                p.fill_rect(n * 10, i * 10, 10, 10, "yellow")            elif original_list[i][n] == "1":                p.fill_rect(n * 10, i * 10, 10, 10, "green")            elif original_list[i][n] == "2":                p.fill_rect(n * 10, i * 10, 10, 10, "red")main()